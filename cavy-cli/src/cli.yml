name: Cavy
author: mcncm <cavy-lang-support@mit.edu>
about: A small, imperative quantum programming language
args:
  - input:
      about: The source file to compile
      required: false
      index: 1
  - object:
      short: o
      value_name: OBJECT
      about: Write the compiler output into <OBJECT>.
      required: false

  # Target options
  - target:
      short: t
      long: target
      value_name: TARGET
      about: Object language to target.
      required: false
      possible_values:
        - "summary"
        - "qasm"
        - "latex"
        - "null"
      default_value: "qasm"
  - standalone:
      long: standalone
      about: Compiles LaTeX output as a standalone document.
  - nwtarg:
      long: nwtarg
      about: Use nice `\nwtarg` macros in LaTeX output. Always on if `standalone`.
  - initial_kets:
      long: initial-kets
      about: Replace initial `X` gates with ket states.
  - perf:
      long: perf
      about: Include profiling data in summary statistics.
  - package:
      long: package
      value_name: PACKAGE
      required: false
      possible_values:
        - "qcircuit"
        - "quantikz"
        - "yquant"
      default_value: "quantikz"
      about: <PACKAGE> is the LaTeX package used for circuit output.
      
  # Compile phase options
  - debug:
      short: d
      long: debug
      about: Runs the compiler in debug mode
  - phase:
      long: phase
      required: false
      value_name: PHASE
      about: <PHASE> is the last phase of the compiler to run.
      possible_values:
        - "tokenize"
        - "parse"
        - "typecheck"
        - "analysis"
        - "optimization"
        - "translation"
        - "codegen"
      default_value: "codegen"
  - typecheck:
      long: typecheck
      about: Run the static type-checking pass.

  # Optimization options
  - opt:
      short: O
      long: opt-level
      value_name: OPT
      about: Sets the optimization level.
      possible_values:
        - "0"
        - "1"
        - "2"
        - "3"
      default_value: "3"
      required: false
  - enable_opt:
      about: Enable a specific optimization, regardless of optimization level.
      short: E
      long: enable-opt
      multiple: true
      possible_values:
        - "constprop"
        - "unipotence"
  - disable_opt:
      about: Disable a specific optimization, regardless of optimization level.
      short: D
      long: disable-opt
      multiple: true
      possible_values:
        - "constprop"
        - "unipotence"

  # Architectural options
  - qbcount:
      short: q
      long: qbcount
      value_name: QBCOUNT
      about: <QBCOUNT> is the number of physical qubits.
      required: false
  - qram_size:
      long: qram-size
      value_name: QRAM_SIZE
      about: <QRAM_SIZE> is the number of addressable random access qubits.
  - feedback:
      long: feedback
      about: Enables classical feedback.
  - meas_mode:
      short: m
      long: meas-mode
      value_name: MODE
      about: <MODE> determines the state of a hardware qubit after a projective measurement.
      possible_values:
        - "demolition"
        - "nondemolition"
        - "dirty"
      default_value: "demolition"
