name: Cavy
author: mcncm <cavy-lang-support@mit.edu>
about: A small, imperative quantum programming language
args:
  - input:
      about: The source file to compile
      required: false
      index: 1
  - object:
      short: o
      value_name: OBJECT
      about: Write the compiler output into <OBJECT>
      required: false
  - target:
      short: t
      long: target
      value_name: TARGET
      about: Object language to target.
      required: false
      possible_values:
        - qasm
        - latex
        - latex_standalone
  - opt:
      short: O
      long: opt
      value_name: OPT
      about: Sets an optimization level.
      possible_values:
        - "0"
        - "1"
        - "2"
        - "3"
      required: false
  - debug:
      short: d
      long: debug
      about: Runs the compiler in debug mode
  - phase:
      long: phase
      required: false
      value_name: PHASE
      about: <PHASE> is the last phase of the compiler to run
      possible_values:
        - "tokenize"
        - "parse"
        - "typecheck"
        - "evaluate"
  - typecheck:
      long: typecheck
      about: Run the static type-checking pass

  # Architectural options
  - qbcount:
      short: q
      long: qbcount
      value_name: QBCOUNT
      about: <QBCOUNT> is the number of physical qubits
      required: false
  - qram_size:
      long: qram-size
      value_name: QRAM_SIZE
      about: <QRAM_SIZE> is the number of addressable random access qubits
  - feedback:
      long: feedback
      about: Enables classical feedback
  - meas_mode:
      short: m
      long: meas-mode
      value_name: MODE
      about: <MODE> determines the state of a hardware qubit after a projective measurement
      possible_values:
        - "demolition"
        - "nondemolition"
